license()
8^2
install.packages("tidyjson")
install.packages("haven")
install.packages("tidyverse")
library(tidyjson)
install.packages("tidyjson")
install.packages("haven")
install.packages("tidyverse")
library(tidyjson)
library(haven)
library(tidyverse)
install.packages("tidyverse")
install.packages("tidyjson")
install.packages("haven")
install.packages("tidyverse")
library(tidyjson)
library(haven)
library(tidyverse)
install.packages("tidyverse")
install.packages("tidyjson")
install.packages("haven")
install.packages("tidyverse")
library(tidyjson)
library(haven)
library(tidyverse)
# setwd(~/Workspace/DATA 306/) # adjust as appropriate
stn <- read.csv("C:\Workspace\DATA 306\MTA_Subway_Stations_20250910.csv")
# dataset available on Brightspace and:
## https://data.ny.gov/Transportation/MTA-Subway-Stations/39hk-dx4f/about_data
borotab <- table(stn$Borough)
borotab
install.packages("tidyjson")
install.packages("haven")
install.packages("tidyverse")
library(tidyjson)
library(haven)
library(tidyverse)
# setwd(~/Workspace/DATA 306/) # adjust as appropriate
stn <- read.csv("C:\Workspace\DATA 306\MTA_Subway_Stations_20250910.csv")
# dataset available on Brightspace and:
## https://data.ny.gov/Transportation/MTA-Subway-Stations/39hk-dx4f/about_data
borotab <- table(stn$Borough)
borotab
install.packages("tidyjson")
install.packages("haven")
install.packages("tidyverse")
library(tidyjson)
library(haven)
library(tidyverse)
# setwd(~/Workspace/DATA 306/) # adjust as appropriate
stn <- read.csv("C:\Workspace\DATA 306\MTA_Subway_Stations_20250910.csv")
# dataset available on Brightspace and:
## https://data.ny.gov/Transportation/MTA-Subway-Stations/39hk-dx4f/about_data
borotab <- table(stn$Borough)
borotab
stn <- read.csv("C:\Workspace\DATA 306\MTA_Subway_Stations_20250910.csv")
# setwd(~/Workspace/DATA 306/) # adjust as appropriate
stn <- read.csv("C:\Workspace\DATA 306\MTA_Subway_Stations_20250910.csv")
stn <- read.csv("data/MTA_Subway_Stations_20240207.csv")
install.packages("tidyjson")
install.packages("haven")
install.packages("tidyverse")
library(tidyjson)
library(haven)
library(tidyverse)
# setwd(~/Workspace/DATA 306/) # adjust as appropriate
stn <- read.csv("data/MTA_Subway_Stations_20240207.csv")
# dataset available on Brightspace and:
## https://data.ny.gov/Transportation/MTA-Subway-Stations/39hk-dx4f/about_data
borotab <- table(stn$Borough)
borotab
install.packages("tidyjson")
install.packages("haven")
install.packages("tidyverse")
library(tidyjson)
library(haven)
library(tidyverse)
# setwd(~/Workspace/DATA 306/) # adjust as appropriate
stn <- read.csv("data/MTA_Subway_Stations_20240207.csv")
# dataset available on Brightspace and:
## https://data.ny.gov/Transportation/MTA-Subway-Stations/39hk-dx4f/about_data
borotab <- table(stn$Borough)
borotab
install.packages("tidyjson")
install.packages("haven")
install.packages("tidyverse")
library(tidyjson)
library(haven)
library(tidyverse)
# setwd(~/Workspace/DATA 306/) # adjust as appropriate
stn <- read.csv("data/MTA_Subway_Stations_20240916.csv")
# dataset available on Brightspace and:
## https://data.ny.gov/Transportation/MTA-Subway-Stations/39hk-dx4f/about_data
borotab <- table(stn$Borough)
borotab
install.packages("tidyjson")
install.packages("haven")
install.packages("tidyverse")
library(tidyjson)
library(haven)
library(tidyverse)
# help(worldbank) # sometimes packages come with their own tutorials
str(worldbank)
worldbank[1]
install.packages("tidyjson")
install.packages("haven")
install.packages("tidyverse")
library(tidyjson)
library(haven)
library(tidyverse)
# help(worldbank) # sometimes packages come with their own tutorials
str(worldbank)
worldbank[1]
install.packages("tidyjson")
install.packages("haven")
install.packages("tidyverse")
library(tidyjson)
library(haven)
library(tidyverse)
# help(worldbank) # sometimes packages come with their own tutorials
str(worldbank)
worldbank[250]
install.packages("tidyjson")
install.packages("haven")
install.packages("tidyverse")
library(tidyjson)
library(haven)
library(tidyverse)
# help(worldbank) # sometimes packages come with their own tutorials
str(worldbank)
worldbank[1]
worldbank[251] # <- 251 value
worldbank[131] # <- 131 value
install.packages("tidyjson")
install.packages("haven")
install.packages("tidyverse")
library(tidyjson)
library(haven)
library(tidyverse)
# help(worldbank) # sometimes packages come with their own tutorials
str(worldbank)
worldbank[1]
worldbank[251] # <- 251 value
worldbank[131] # <- 131 value
wb_table_ethiopia <- spread_all(worldbank[1]) # notice the <-
wb_df_ethiopia <- as.data.frame(wb_table_ethiopia)
## <- means define everything to the right under
## the object name to the left.
wb_df_ethiopia # invoking the object name returns the contents of the object
install.packages("tidyjson")
install.packages("haven")
install.packages("tidyverse")
library(tidyjson)
library(haven)
library(tidyverse)
# help(worldbank) # sometimes packages come with their own tutorials
str(worldbank)
worldbank[1]
worldbank[251] # <- 251 value
worldbank[131] # <- 131 value
wb_table_ethiopia <- spread_all(worldbank[1]) # notice the <-
wb_df_ethiopia <- as.data.frame(wb_table_ethiopia)
## <- means define everything to the right under
## the object name to the left.
wb_df_ethiopia # invoking the object name returns the contents of the object
wb_df_ethiopia[2:7] # now we are "subsetting" columns 2 through 7 of the table
install.packages("tidyjson")
install.packages("haven")
install.packages("tidyverse")
library(tidyjson)
library(haven)
library(tidyverse)
# help(worldbank) # sometimes packages come with their own tutorials
str(worldbank)
worldbank[1]
worldbank[251] # <- 251 value
worldbank[131] # <- 131 value
wb_table_ethiopia <- spread_all(worldbank[1]) # notice the <-
wb_df_ethiopia <- as.data.frame(wb_table_ethiopia)
## <- means define everything to the right under
## the object name to the left.
wb_df_ethiopia # invoking the object name returns the contents of the object
wb_df_ethiopia[2:7] # now we are "subsetting" columns 2 through 7 of the table
wb_table <- spread_all(worldbank[1:10])
wb_df <- as.data.frame(wb_table)
wb_df[2:7]
install.packages("tidyjson")
install.packages("haven")
install.packages("tidyverse")
library(tidyjson)
library(haven)
library(tidyverse)
# help(worldbank) # sometimes packages come with their own tutorials
str(worldbank)
worldbank[1]
worldbank[251] # <- 251 value
worldbank[131] # <- 131 value
wb_table_ethiopia <- spread_all(worldbank[1]) # notice the <-
wb_df_ethiopia <- as.data.frame(wb_table_ethiopia)
## <- means define everything to the right under
## the object name to the left.
wb_df_ethiopia # invoking the object name returns the contents of the object
wb_df_ethiopia[2:7] # now we are "subsetting" columns 2 through 7 of the table
wb_table <- spread_all(worldbank[1:10])
wb_df <- as.data.frame(wb_table)
wb_df[2:7]
write.csv(wb_df[2:7], "worldbank_selection.csv")
install.packages("tidyjson")
install.packages("haven")
install.packages("tidyverse")
library(tidyjson)
library(haven)
library(tidyverse)
# help(worldbank) # sometimes packages come with their own tutorials
str(worldbank)
worldbank[1]
worldbank[251] # <- 251 value
worldbank[131] # <- 131 value
wb_table_ethiopia <- spread_all(worldbank[1]) # notice the <-
wb_df_ethiopia <- as.data.frame(wb_table_ethiopia)
## <- means define everything to the right under
## the object name to the left.
wb_df_ethiopia # invoking the object name returns the contents of the object
wb_df_ethiopia[2:7] # now we are "subsetting" columns 2 through 7 of the table
wb_table <- spread_all(worldbank[1:10])
wb_df <- as.data.frame(wb_table)
wb_df[2:7]
write.csv(wb_df[2:7], "worldbank_selection.csv")
getwd()
install.packages("tidyjson")
install.packages("haven")
install.packages("tidyverse")
library(tidyjson)
library(haven)
library(tidyverse)
# help(worldbank) # sometimes packages come with their own tutorials
str(worldbank)
worldbank[1]
worldbank[251] # <- 251 value
worldbank[131] # <- 131 value
wb_table_ethiopia <- spread_all(worldbank[1]) # notice the <-
wb_df_ethiopia <- as.data.frame(wb_table_ethiopia)
## <- means define everything to the right under
## the object name to the left.
wb_df_ethiopia # invoking the object name returns the contents of the object
wb_df_ethiopia[2:7] # now we are "subsetting" columns 2 through 7 of the table
wb_table <- spread_all(worldbank[1:10])
wb_df <- as.data.frame(wb_table)
wb_df[2:7]
write.csv(wb_df[2:7], "worldbank_selection.csv")
getwd()
setwd("~/Workspace/DATA 306")
install.packages("tidyjson")
install.packages("haven")
install.packages("tidyverse")
library(tidyjson)
library(haven)
library(tidyverse)
# help(worldbank) # sometimes packages come with their own tutorials
str(worldbank)
worldbank[1]
worldbank[251] # <- 251 value
worldbank[131] # <- 131 value
wb_table_ethiopia <- spread_all(worldbank[1]) # notice the <-
wb_df_ethiopia <- as.data.frame(wb_table_ethiopia)
## <- means define everything to the right under
## the object name to the left.
wb_df_ethiopia # invoking the object name returns the contents of the object
wb_df_ethiopia[2:7] # now we are "subsetting" columns 2 through 7 of the table
wb_table <- spread_all(worldbank[1:10])
wb_df <- as.data.frame(wb_table)
wb_df[2:7]
write.csv(wb_df[2:7], "worldbank_selection.csv")
getwd()
setwd("~/Workspace/DATA 306")
setwd("~/Workspace/DATA 306")
install.packages("tidyjson")
install.packages("haven")
install.packages("tidyverse")
library(tidyjson)
library(haven)
library(tidyverse)
# help(worldbank) # sometimes packages come with their own tutorials
str(worldbank)
worldbank[1]
worldbank[251] # <- 251 value
worldbank[131] # <- 131 value
wb_table_ethiopia <- spread_all(worldbank[1]) # notice the <-
wb_df_ethiopia <- as.data.frame(wb_table_ethiopia)
## <- means define everything to the right under
## the object name to the left.
wb_df_ethiopia # invoking the object name returns the contents of the object
wb_df_ethiopia[2:7] # now we are "subsetting" columns 2 through 7 of the table
wb_table <- spread_all(worldbank[1:10])
wb_df <- as.data.frame(wb_table)
wb_df[2:7]
write.csv(wb_df[2:7], "worldbank_selection.csv")
getwd()
setwd("C:\Workspace\DATA 306")
setwd("~\Workspace\DATA 306")
setwd("~/Workspace/DATA 306")
install.packages("tidyjson")
install.packages("haven")
install.packages("tidyverse")
library(tidyjson)
library(haven)
library(tidyverse)
# help(worldbank) # sometimes packages come with their own tutorials
str(worldbank)
worldbank[1]
worldbank[251] # <- 251 value
worldbank[131] # <- 131 value
wb_table_ethiopia <- spread_all(worldbank[1]) # notice the <-
wb_df_ethiopia <- as.data.frame(wb_table_ethiopia)
## <- means define everything to the right under
## the object name to the left.
wb_df_ethiopia # invoking the object name returns the contents of the object
wb_df_ethiopia[2:7] # now we are "subsetting" columns 2 through 7 of the table
wb_table <- spread_all(worldbank[1:10])
wb_df <- as.data.frame(wb_table)
wb_df[2:7]
write.csv(wb_df[2:7], "worldbank_selection.csv")
getwd()
setwd("~/Workspace/DATA 306")
q()
install.packages("tidyjson")
install.packages("haven")
install.packages("tidyverse")
library(tidyjson)
library(haven)
library(tidyverse)
## Kyle Silvestre
## Exercise 1: Diagram and test hypotheses in R
## DATA 306
## 9/15/2023
### Part 1: Following along
getwd() 
setwd("C:/Workspace/DATA-306")
getwd()
school <- read.csv("data/NYCschools_r1.csv")
str(school)
head(school)
head(school, 10)
hist(school$mean_class_size)
par(mfrow = c(1,3))
hist(school[["mean_class_size"]])
hist(school[ , "mean_class_size"])
hist(school$mean_class_size)
par(mfrow = c(1,3))
hist(school[["mean_class_size"]]
boxplot(school[ , "mean_class_size"], horizontal = "TRUE")
stripchart(school$mean_class_size, method = "jitter")
par(mfrow = c(1,3))
hist(school[["mean_class_size"]]
boxplot(school[ , "mean_class_size"], horizontal = "TRUE")
stripchart(school$mean_class_size, method = "jitter")
par(mfrow = c(1,3))
hist(school[["mean_class_size"]])
boxplot(school[ , "mean_class_size"], horizontal = TRUE)
stripchart(school$mean_class_size, method = "jitter")
summary(school)
install.packages("tidyjson")
install.packages("haven")
install.packages("tidyverse")
library(tidyjson)
library(haven)
library(tidyverse)
## Kyle Silvestre
## Exercise 1: Diagram and test hypotheses in R
## DATA 306
## 9/15/2023
### Part 1: Following along
getwd() 
setwd("C:/Workspace/DATA-306")
getwd()
school <- read.csv("data/NYCschools_r1.csv")
str(school)
head(school)
head(school, 10)
hist(school$mean_class_size)
par(mfrow = c(1,3))
hist(school[["mean_class_size"]])
hist(school[ , "mean_class_size"])
hist(school$mean_class_size)
# 6
par(mfrow = c(1,3))
hist(school[["mean_class_size"]])
boxplot(school[ , "mean_class_size"], horizontal = TRUE)
stripchart(school$mean_class_size, method = "jitter")
# 7
summary(school)
summary(school)
hist(school[["mean_class_size"]])
boxplot(school[ , "mean_class_size"], horizontal = TRUE)
par(mfrow = c(1,3))
hist(school[["mean_class_size"]])
boxplot(school[ , "mean_class_size"], horizontal = TRUE)
par(mfrow = c(1,3))
hist(school[["mean_class_size"]])
boxplot(school[ , "mean_class_size"], horizontal = TRUE)
stripchart(school$mean_class_size, method = "jitter")
summary(school)
summary(school$total_enrollment)
install.packages("DiagrammeR")
library(DiagrammeR)
grViz("digraph {’School size’ -> ’Class size’}")
grViz("digraph {'School size' -> 'Class size' [label = '+']}")
grViz("digraph {
rankdir = 'LR'
'School size' -> 'Class size' [label = ' -']
}")
plot(school$total_enrollment, school$mean_class_size)
plot(school$total_enrollment, school$mean_class_size)
#school_lm <- lm(mean_class_size ~ total_enrollment, data = school)
school_lm <- lm(mean_class_size ~ total_enrollment, data = school)
school_lm <- lm(mean_class_size ~ total_enrollment, data = school)
summary(school_lm)
plot(school$mean_class_size ~ school$total_enrollment)
abline(school_lm, col = "blue", lwd = 2)
scatter.smooth(school$mean_class_size ~ school$total_enrollment, 
span = 2/3, degree = 2,
lpars = list(col = "red" lwd=2))
abline(school_lm, col ="blue", lwd=2) 
scatter.smooth(school$mean_class_size ~ school$total_enrollment,
span = 2/3, degree = 2, # these are defaults
## play with them to see what changes
lpars = list(col = "red", lwd = 2))
# lpars means line parameters
abline(school_lm, col = "blue", lwd = 2)
scatter.smooth(school$mean_class_size ~ school$total_enrollment,
span = 2/3, degree = 2, 
lpars = list(col = "red", lwd = 2))
abline(school_lm, col = "blue", lwd = 2)
par(mfrow = c(1,3))
hist(school[["outsiders_student"]])
boxplot(school[ , "mean_class_size"], horizontal = TRUE)
stripchart(school$outsiders_student, method = "jitter")
par(mfrow = c(1,3))
hist(school[["outsiders_student"]])
boxplot(school[ , "mean_class_size"], horizontal = TRUE)
stripchart(school$outsiders_student, method = "jitter")
summary(school$outsider_students)
summary(school$outsiders_students)
summary(school$outsiders_student)
grViz("digraph {’School size’ -> ’Class size’}")
grViz("digraph {’Poverty’ -> ’Feelings of being an outsider’ [label = ’+’]}")
grViz("digraph {’Poverty’ -> 'Feelings of being an outsider' [label = ’+’]}")
grViz("digraph {’School size’ -> ’Class size’ [label = ’+’]}")
grViz("digraph {’School size’ -> ’Class size’ [label = ’+’]}")
library(DiagrammeR)
grViz("digraph {’School size’ -> ’Class size’ [label = ’+’]}")
install.packages("DiagrammeR")
grViz("digraph {'School size' -> 'Class size' [label = '+']}")
grViz("digraph {'Poverty' -> 'Feelings of being an outsider' [label = '+']}")
school_lm_2 <- lm(outsiders_student ~ poverty, data = school)
summary(school_lm_2)
plot(school$outsiders_student ~ school$poverty)
abline(school_lm_2, col = "blue", lwd = 2)
scatter.smooth(school$outsiders_student~ school$poverty,
span = 2/3, degree = 2,
lpars = list(col = "red", lwd = 2))
abline(school_lm_2, col = "blue", lwd = 2)
q()
